suite: "Storage Deployment Tests"

templates:
  - "templates/storage/deployment.yaml"

tests:
  - it: "should render a Deployment with the correct replica count, logging level, image, and imagePullPolicy"
    set:
      global:
        cattle:
          systemDefaultRegistry: rancher.io
      storage:
        replicas: 5
        logLevel: debug
        image:
          repository: rancher-sandbox/sbombastic/storage
          tag: v0.1.0
          pullPolicy: Always
        persistence:
          name: sqlite-pvc-test
    asserts:
      - equal:
          path: "spec.replicas"
          value: 5
      - equal:
          path: "spec.template.spec.containers[0].image"
          value: "rancher.io/rancher-sandbox/sbombastic/storage:v0.1.0"
      - equal:
          path: "spec.template.spec.containers[0].imagePullPolicy"
          value: "Always"
      - contains:
          path: "spec.template.spec.containers[0].args"
          content: "-log-level=debug"
      - equal:
          path: "spec.template.spec.volumes[0].persistentVolumeClaim.claimName"
          value: "RELEASE-NAME-sbombastic-storage-data"
  - it: "should use existing PVC claim name when persistence.storageData.existingClaim is specified"
    set:
      persistence:
        enabled: true
        storageData:
          existingClaim: "existing-claim"
    asserts:
      - equal:
          path: "spec.template.spec.volumes[0].persistentVolumeClaim.claimName"
          value: "existing-claim"

  - it: "Ensure the cnpg engine should mount the correct database credential secret"
    set:
      storage:
        database:
          engine: cnpg
          cnpg:
            credential: test-pg-server-app
            tls:
              sslmode: verify-cnpg-full
              clientCert: test-client-cert
              serverCA: test-server-ca-key-pair
    asserts:
      - contains:
          path: "spec.template.spec.volumes"
          content:
            name: "database-credential-volume"
            secret:
              secretName: test-pg-server-app
              defaultMode: 0400
      - contains:
          path: "spec.template.spec.volumes"
          content:
            name: "database-client-cert-volume"
            secret:
              secretName: test-client-cert
              defaultMode: 0400
      - contains:
          path: "spec.template.spec.volumes"
          content:
            name: "database-server-ca-volume"
            secret:
              secretName: test-server-ca-key-pair
              defaultMode: 0400
      - contains:
          path: "spec.template.spec.containers[0].env"
          content:
            name: "DATABASE_SSLMODE"
            value: "verify-cnpg-full"

  - it: "Ensure the external postgres should mount the correct database credential secret"
    set:
      storage:
        database:
          enableBuiltInCnpg: false
          externalPostgres:
            credential: test-external-db-auth
            tls:
              enabled: true
              clientCert: test-external-client-cert
              serverCA: test-external-server-ca-key-pair
              sslmode: verify-external-full
    asserts:
      - contains:
          path: "spec.template.spec.volumes"
          content:
            name: "database-credential-volume"
            secret:
              secretName: test-external-db-auth
              defaultMode: 0400
      - contains:
          path: "spec.template.spec.volumes"
          content:
            name: "database-client-cert-volume"
            secret:
              secretName: test-external-client-cert
              defaultMode: 0400
      - contains:
          path: "spec.template.spec.volumes"
          content:
            name: "database-server-ca-volume"
            secret:
              secretName: test-external-server-ca-key-pair
              defaultMode: 0400
      - contains:
          path: "spec.template.spec.containers[0].env"
          content:
            name: "DATABASE_SSLMODE"
            value: "verify-external-full"

  - it: "Ensure the external postgres should mount the correct database credential secret when no TLS is enabled"
    set:
      storage:
        database:
          enableBuiltInCnpg: false
          externalPostgres:
            credential: test-external-db-auth
            tls:
              enabled: false
              serverCA: test-external-server-ca-key-pair
              clientCert: test-external-client-cert
    asserts:
      - contains:
          path: "spec.template.spec.volumes"
          content:
            name: "database-credential-volume"
            secret:
              secretName: test-external-db-auth
              defaultMode: 0400
      - notContains:
          path: "spec.template.spec.volumes"
          content:
            name: "database-client-cert-volume"
            secret:
              secretName: test-external-client-cert
              defaultMode: 0400
      - notContains:
          path: "spec.template.spec.volumes"
          content:
            name: "database-server-ca-volume"
            secret:
              secretName: test-external-server-ca-key-pair
              defaultMode: 0400
